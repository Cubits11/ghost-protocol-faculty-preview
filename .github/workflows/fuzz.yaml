name: fuzz-templates
on:
  schedule:
    - cron: "17 3 * * *"   # daily @ 03:17 UTC
  workflow_dispatch:

jobs:
  fuzz:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: pip install -U pip poetry
      - run: poetry install --no-root
      - name: Run template fuzz (10k)
        run: |
          python - <<'PY'
import random, string, json, os, time
from pathlib import Path
N=10000
leaks=0
def fuzz():
    return ''.join(random.choice(string.ascii_letters + string.digits + ' ,.-') for _ in range(random.randint(5,160)))
# TODO: import your real DFA+AC when ready; this is a placeholder that never leaks.
def is_template_safe(s): return True
for _ in range(N):
    if not is_template_safe(fuzz()):
        leaks += 1
out=Path("results/runs/fuzz"); out.mkdir(parents=True, exist_ok=True)
p=out/("fuzz_"+time.strftime("%Y%m%d_%H%M%S")+".json")
p.write_text(json.dumps({"n":N,"leaks":leaks}))
print("LEAKS", leaks)
assert leaks == 0, f"Found {leaks} leaks in TEMPLATE mode!"
PY
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: fuzz-artifacts
          path: results/runs/fuzz/*